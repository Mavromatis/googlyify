<% layout("layout") -%>

<div class="container-block clearfix">
  <h3>ok ok hold on.....</h3>
  <div class="progress">
    <div class="progress-bar progress-bar-info status-progress" style="width: 0;"></div>
  </div>
  <div class="row">
    <div class="status-messages col-sm-6">
    </div>
    <div class="col-sm-6 status-image">
      <img class="img-1" src="/images/status/thisisdog.png" />
      <img class="img-2" src="/images/status/noidea1.jpg" />
      <img class="img-3" src="/images/status/noidea2.jpg" />
      <img class="img-4" src="/images/status/noidea3.jpg" />
    </div>
  </div>
  <div class="error-message"></div>
</div>

<script>
var statusEl = $(".status-messages");
var progress = 0;
var uploadStart = Date.now();
var statusInfo = {
  renderedFrames: 0,
  totalFrames: 1,
  renderComplete: false,
  complete: false,
  error: false
};

rotateDogeImages();

setInterval(function () {
  $(".status-progress").css({width: (getProgress()*100) + "%"});
}, 300);

function getProgress () {
  var rendered = 88;
  var uploaded = 10;
  var weight = rendered + uploaded;
  
  if (statusInfo.error) { return 1; }
  if (statusInfo.complete) { return 1; }
  
  var progress = 0;
  
  if (statusInfo.renderedFrames > statusInfo.totalFrames) { statusInfo.totalFrames = statusInfo.renderedFrames + 1; }
  progress += statusInfo.renderedFrames / statusInfo.totalFrames * rendered;
  
  if (statusInfo.renderComplete) {
    progress += (1 - 5/(5+(Date.now()-uploadStart)/1000)) * uploaded;
  }
  
  return progress / weight;
}

var socket = io.connect("http://<%= host %>");
socket.emit("render", {
  id: "<%= id %>",
  key: "<%= key %>"
});

var connected = false;
showStatusMessage("Connecting to server...", "connect");

socket.on("status", function (data) {
  if (!connected) {
    showStatusMessage("Connected!", "connect");
    connected = true;
  }
  //console.log("status", data);
  showStatusMessage(data.message, data.tag);
  if (data && data.info) {
    if (data.info.renderComplete) {
      uploadStart = Date.now();
    }
    for (var k in data.info) {
      statusInfo[k] = data.info[k];
    }
  }
});
socket.on("complete", function (data) {
  //console.log("complete!", data);
  statusInfo.complete = true;
  showStatusMessage("<strong>Complete!</strong>", null, "complete");
  $(".status-progress").removeClass("progress-bar-info").addClass("progress-bar-success");
  setTimeout(function () {
    window.location = data.redirect;
  }, 1000);
});
socket.on("error", function (err) {
  //console.log("error!", err);
  statusInfo.error = true;
  var msg = err.msg || JSON.stringify(err);
  showStatusMessage("<strong>Error!</strong> " + msg, null, "error");
  $(".status-progress").removeClass("progress-bar-info").addClass("progress-bar-danger");
});

</script>